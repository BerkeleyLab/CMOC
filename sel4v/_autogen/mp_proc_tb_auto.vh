// parse_vfile  mp_proc_tb.v
// module=mp_proc instance=dut gvar=None gcnt=None
// parse_vfile :mp_proc_tb.v ./mp_proc.v
// found output address in module mp_proc, base=setmp
// found output address in module mp_proc, base=coeff
// found output address in module mp_proc, base=lim
`define AUTOMATIC_dut .sel_en(dut_sel_en),\
	.ph_offset(dut_ph_offset),\
	.sel_thresh(dut_sel_thresh),\
	.setmp(dut_setmp),\
	.coeff(dut_coeff),\
	.lim(dut_lim),\
	.setmp_addr(dut_setmp_addr),\
	.coeff_addr(dut_coeff_addr),\
	.lim_addr(dut_lim_addr)
// machine-generated by newad.py
`ifdef LB_DECODE_mp_proc_tb
`include "addr_map_mp_proc_tb.vh"
`define AUTOMATIC_self input lb_clk, input [31:0] lb_data, input lb_write, input [13:0] lb_addr
`define AUTOMATIC_decode\
wire we_dut_sel_en = lb_write&(`ADDR_HIT_dut_sel_en);\
reg [0:0] dut_sel_en=0; always @(posedge lb_clk) if (we_dut_sel_en) dut_sel_en <= lb_data;\
wire we_dut_ph_offset = lb_write&(`ADDR_HIT_dut_ph_offset);\
reg [17:0] dut_ph_offset=0; always @(posedge lb_clk) if (we_dut_ph_offset) dut_ph_offset <= lb_data;\
wire we_dut_sel_thresh = lb_write&(`ADDR_HIT_dut_sel_thresh);\
reg [17:0] dut_sel_thresh=0; always @(posedge lb_clk) if (we_dut_sel_thresh) dut_sel_thresh <= lb_data;\
wire [1:0] dut_setmp_addr;\
wire [17:0] dut_setmp;\
wire we_dut_setmp = lb_write&(`ADDR_HIT_dut_setmp);\
dpram #(.aw(2),.dw(18)) dp_dut_setmp(\
	.clka(lb_clk), .addra(lb_addr[1:0]), .dina(lb_data[17:0]), .wena(we_dut_setmp),\
	.clkb(lb_clk), .addrb(dut_setmp_addr), .doutb(dut_setmp));\
wire [1:0] dut_coeff_addr;\
wire [17:0] dut_coeff;\
wire we_dut_coeff = lb_write&(`ADDR_HIT_dut_coeff);\
dpram #(.aw(2),.dw(18)) dp_dut_coeff(\
	.clka(lb_clk), .addra(lb_addr[1:0]), .dina(lb_data[17:0]), .wena(we_dut_coeff),\
	.clkb(lb_clk), .addrb(dut_coeff_addr), .doutb(dut_coeff));\
wire [1:0] dut_lim_addr;\
wire [17:0] dut_lim;\
wire we_dut_lim = lb_write&(`ADDR_HIT_dut_lim);\
dpram #(.aw(2),.dw(18)) dp_dut_lim(\
	.clka(lb_clk), .addra(lb_addr[1:0]), .dina(lb_data[17:0]), .wena(we_dut_lim),\
	.clkb(lb_clk), .addrb(dut_lim_addr), .doutb(dut_lim));\
wire [31:0] mirror_out_0;wire mirror_write_0 = lb_write &(`ADDR_HIT_MIRROR);\
dpram #(.aw(`MIRROR_WIDTH),.dw(32)) mirror_0(\
	.clka(lb_clk), .addra(lb_addr[`MIRROR_WIDTH-1:0]), .dina(lb_data[31:0]), .wena(mirror_write_0),\
	.clkb(lb_clk), .addrb(lb_addr[`MIRROR_WIDTH-1:0]), .doutb(mirror_out_0));\

`else
`define AUTOMATIC_self input  [0:0] dut_sel_en,\
input signed [17:0] dut_ph_offset,\
input signed [17:0] dut_sel_thresh,\
input signed [17:0] dut_setmp,\
input signed [17:0] dut_coeff,\
input signed [17:0] dut_lim,\
output  [1:0] dut_setmp_addr,\
output  [1:0] dut_coeff_addr,\
output  [1:0] dut_lim_addr
`define AUTOMATIC_decode
`endif
