// parse_vfile  fdbk_core.v
// module=mp_proc instance=mp_proc gvar=None gcnt=None
// parse_vfile :fdbk_core.v ./mp_proc.v
// found output address in module mp_proc, base=setmp
// found output address in module mp_proc, base=coeff
// found output address in module mp_proc, base=lim
`define AUTOMATIC_mp_proc .sel_en(mp_proc_sel_en),\
	.ph_offset(mp_proc_ph_offset),\
	.sel_thresh(mp_proc_sel_thresh),\
	.setmp(mp_proc_setmp),\
	.coeff(mp_proc_coeff),\
	.lim(mp_proc_lim),\
	.setmp_addr(mp_proc_setmp_addr),\
	.coeff_addr(mp_proc_coeff_addr),\
	.lim_addr(mp_proc_lim_addr)
// machine-generated by newad.py
`ifdef LB_DECODE_fdbk_core
`include "addr_map_fdbk_core.vh"
`define AUTOMATIC_self input lb_clk, input [31:0] lb_data, input lb_write, input [13:0] lb_addr
`define AUTOMATIC_decode\
wire we_mp_proc_sel_en = lb_write&(`ADDR_HIT_mp_proc_sel_en);\
reg [0:0] mp_proc_sel_en=0; always @(posedge lb_clk) if (we_mp_proc_sel_en) mp_proc_sel_en <= lb_data;\
wire we_mp_proc_ph_offset = lb_write&(`ADDR_HIT_mp_proc_ph_offset);\
reg [17:0] mp_proc_ph_offset=0; always @(posedge lb_clk) if (we_mp_proc_ph_offset) mp_proc_ph_offset <= lb_data;\
wire we_mp_proc_sel_thresh = lb_write&(`ADDR_HIT_mp_proc_sel_thresh);\
reg [17:0] mp_proc_sel_thresh=0; always @(posedge lb_clk) if (we_mp_proc_sel_thresh) mp_proc_sel_thresh <= lb_data;\
wire [1:0] mp_proc_setmp_addr;\
wire [17:0] mp_proc_setmp;\
wire we_mp_proc_setmp = lb_write&(`ADDR_HIT_mp_proc_setmp);\
dpram #(.aw(2),.dw(18)) dp_mp_proc_setmp(\
	.clka(lb_clk), .addra(lb_addr[1:0]), .dina(lb_data[17:0]), .wena(we_mp_proc_setmp),\
	.clkb(lb_clk), .addrb(mp_proc_setmp_addr), .doutb(mp_proc_setmp));\
wire [1:0] mp_proc_coeff_addr;\
wire [17:0] mp_proc_coeff;\
wire we_mp_proc_coeff = lb_write&(`ADDR_HIT_mp_proc_coeff);\
dpram #(.aw(2),.dw(18)) dp_mp_proc_coeff(\
	.clka(lb_clk), .addra(lb_addr[1:0]), .dina(lb_data[17:0]), .wena(we_mp_proc_coeff),\
	.clkb(lb_clk), .addrb(mp_proc_coeff_addr), .doutb(mp_proc_coeff));\
wire [1:0] mp_proc_lim_addr;\
wire [17:0] mp_proc_lim;\
wire we_mp_proc_lim = lb_write&(`ADDR_HIT_mp_proc_lim);\
dpram #(.aw(2),.dw(18)) dp_mp_proc_lim(\
	.clka(lb_clk), .addra(lb_addr[1:0]), .dina(lb_data[17:0]), .wena(we_mp_proc_lim),\
	.clkb(lb_clk), .addrb(mp_proc_lim_addr), .doutb(mp_proc_lim));\
wire [31:0] mirror_out_0;wire mirror_write_0 = lb_write &(`ADDR_HIT_MIRROR);\
dpram #(.aw(`MIRROR_WIDTH),.dw(32)) mirror_0(\
	.clka(lb_clk), .addra(lb_addr[`MIRROR_WIDTH-1:0]), .dina(lb_data[31:0]), .wena(mirror_write_0),\
	.clkb(lb_clk), .addrb(lb_addr[`MIRROR_WIDTH-1:0]), .doutb(mirror_out_0));\

`else
`define AUTOMATIC_self input  [0:0] mp_proc_sel_en,\
input signed [17:0] mp_proc_ph_offset,\
input signed [17:0] mp_proc_sel_thresh,\
input signed [17:0] mp_proc_setmp,\
input signed [17:0] mp_proc_coeff,\
input signed [17:0] mp_proc_lim,\
output  [1:0] mp_proc_setmp_addr,\
output  [1:0] mp_proc_coeff_addr,\
output  [1:0] mp_proc_lim_addr
`define AUTOMATIC_decode
`endif
